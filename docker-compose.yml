version: '3.8'
services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - USER_SERVICE_URL=http://user-service:5001
      - CAR_SERVICE_URL=http://car-service:5002
      - BOOKING_SERVICE_URL=http://booking-service:5003
      - PAYMENT_SERVICE_URL=http://payment-service:5004
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - user-service
      - car-service
      - booking-service
      - payment-service
    networks:
      - car-rental-network

  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - MONGO_URI=mongodb://mongodb:27017/rentalcarUser
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - car-rental-network

  car-service:
    build: ./car-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGO_URI=mongodb://mongodb:27017/rentalcar
      - USER_SERVICE_URL=http://user-service:5001
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
      user-service:
        condition: service_started
    networks:
      - car-rental-network

  booking-service:
    build: ./booking-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - MONGO_URI=mongodb://mongodb:27017/rentalcarBooking
      - USER_SERVICE_URL=http://user-service:5001
      - CAR_SERVICE_URL=http://car-service:5002
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
      user-service:
        condition: service_started
      car-service:
        condition: service_started
    networks:
      - car-rental-network

  payment-service:
    build: ./payment-service
    ports:
      - "5004:5004"
    environment:
      - PORT=5004
      - MONGO_URI=mongodb://mongodb:27017/payment
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - car-rental-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - car-rental-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  car-rental-network:
    driver: bridge

volumes:
  mongodb_data: